name: Build and Push

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'
    paths-ignore:
      - '#NORUN *'

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract branch name
      id: extract_branch
      run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

    - name: Build Docker Image
      run: docker build -t go-fortune:${{ steps.extract_branch.outputs.branch }} .

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y

    - name: Scan the Docker image and save report
      run: |
        trivy image --severity HIGH --format table go-fortune:${{ steps.extract_branch.outputs.branch }} > trivy_report.txt || true
        cat trivy_report.txt
        
    - name: Check for vulnerabilities in trivy report
      id: check_vulnerabilities
      run: |
        total_vulnerabilities=0
        while IFS= read -r line; do
          if [[ $line =~ Total:\ ([0-9]+) ]]; then
            section_vulnerabilities="${BASH_REMATCH[1]}"
            total_vulnerabilities=$((total_vulnerabilities + section_vulnerabilities))
          fi
        done < trivy_report.txt
        echo "Total vulnerabilities: $total_vulnerabilities Found" 
        echo "::set-output name=numberVul::$total_vulnerabilities"
        
    - name: Notify Slack if vulnerabilities found
      if: steps.check_vulnerabilities.outputs.numberVul > 0
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: 'test-submission'
        SLACK_COLOR: '#ff0000'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    - name: Upload trivy_report.txt to Slack
      if: steps.check_vulnerabilities.outputs.numberVul > 0
      run: |
        curl -F file=@trivy_report.txt -F "initial_comment=Trivy Vulnerability Report for ${{ steps.extract_branch.outputs.branch }}" -F channels=#test-submission -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" https://slack.com/api/files.upload
      

    - name: Fail workflow if vulnerabilities are found
      if: steps.check_vulnerabilities.outputs.numberVul > 0
      run: |
        echo "Vulnerabilities detected. Failing the workflow."
        exit 1
    
    - name: Build and Push Docker if not vulnerabilities found
      if: steps.check_vulnerabilities.outputs.numberVul == 0
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: keyan25123/go-fortune:${{ steps.extract_branch.outputs.branch }}

    - name: Notify Slack if no vulnerabilities found
      if: steps.check_vulnerabilities.outputs.numberVul == 0
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: 'test-submission'
        SLACK_COLOR: '#00ff00'
        SLACK_TITLE: 'Image build and signed'
        SLACK_MESSAGE: "*Name*: Karthikeyan s/o Arivalagan\n*Metriculation*: A0285919J\n*Email*: keyan251192@gmail.com\n*Git*: https://github.com/KarthikAri/go-fortune\n*Image*: https://hub.docker.com/repository/docker/keyan25123/go-fortune"
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  
