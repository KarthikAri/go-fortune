name: KEYAN CICD

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract branch name
      id: extract_branch
      run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: keyan25123/go-fortune:${{ steps.extract_branch.outputs.branch }}

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y

    - name: Scan the Docker image and save report
      run: |
        trivy image --format table keyan25123/go-fortune:${{ steps.extract_branch.outputs.branch }} > trivy_report.txt || true
        
    - name: Check for vulnerabilities in trivy report
      id: check_vulnerabilities
      run: |
        if [ -s trivy_report.txt ]; then
            report_content=$(cat trivy_report.txt | base64 -w 0)
          echo "::set-output name=report::trivy_report.txt"
        else
          echo "::set-output name=report::"
        fi
        
    - name: Notify Slack if vulnerabilities found
      if: steps.check_vulnerabilities.outputs.report != ''
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: repo,message
        custom_payload: |
          {
              text: "${{ github.actor }}",
              channels: '#test-submission',
              attachments: [{
                "fallback": "Reference: ${{ github.ref }}",
                "color": "#ff0000",
                "fields": [
                  {"title": "Ref", "value": "${{ github.ref }}", "short": false},
                  {"title": "Event", "value": "push", "short": false},
                  {"title": "Actions URL", "value": "${{ github.event.repository.html_url }}/actions", "short": false},
                  {"title": "Commit", "value": "${{ github.sha }}", "short": true},
                  {"title": "Scan failed -Fred", "value": "Failed trivy scan, see uploaded report", "short": true},
                ]
              }]
          }

      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload trivy_report.txt to Slack
      if: steps.check_vulnerabilities.outputs.report != ''
      run: |
        curl -F file=@trivy_report.txt -F "initial_comment=Trivy Vulnerability Report for ${{ steps.extract_branch.outputs.branch }}" -F channels=#test-submission -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" https://slack.com/api/files.upload
      

    - name: Fail workflow if vulnerabilities are found
      run: |
        if [ -s trivy_report.txt ]; then
          echo "Vulnerabilities detected. Failing the workflow."
          exit 1
        fi
  
